"""
Общая информация:
Программа получает на ввод название аккорда и выводит возможные его комбинации на гитарном грифе.
Для отображения нот используются три "формата" данных:
1)Численное значение ноты. "До" субконтроктавы = 0. Каждый последующий полутон получает значение +1 от
предыдущего.
Подумывал сделать расчет в герцах, но там более сложные вычисления из-за нелинейной зависимости между полутонами.
Плюс сложнее работать с не 'int' числами.
2)Буквенное значение ноты с указанием октавы. Используется латинская нотация. "До" субконтроктавы = c0. "Буквенные"
значения без октав содержатся в списке nv_converter.allnotes
3)Лады - список струн с числовым обозначением лада, на котором струна нажимается. Открытая струна - 0.
Табулатура, по сути.

В проекте четыре модуля: strings, chord_position, nv_converter и chord_types.
Модуль black_list - в разработке.
-Основной функционал находится в модуле chord_position. Там вычисляются и обрабатываются возможные гитарные
комбинации аккордов.
Вводные данные - то есть конкретный аккорд, который надо найти, также задаются в chord_position.
-Модуль strings задает строй инструмента. Там заданы "гитарные параметры", но их легко перенастроить для любого
струнного инструмента.
-Модуль nv-converter содержит простые инструменты для конвертирования в разные "форматы данных".
-Модуль chord_types содержит функции, создающие определенные типы аккордов


Карта проекта для избежания зацикленных ссылок:

nv_converter --> chord_position, strings
strings --> chord_position
chord_types --> chord_position
chord_position <-- nv_converter, strings, chord_types


Доработки, ошибки:

-Комбинации содержат неиграемые ноты. На практике не играют крайние ноты(6,1, или 6,5,1 и т.п.). В проекте функция,
удаляющая варианты с "внутренней" неиграемой нотой. "Если и слева и справа есть нота, чье численное значение
больше нуля и если струна не играется, комбинация ошибочна и удаляется."

-Можно сделать более привычный формат ввода для гитаристов. Минор с добавлением m, добавочные ступени
цифрами, сложные формы записи навроде Em7/D и т.п.

-Можно сделать флажки-активаторы для опционального отбора аккордов, например для удаления обращений аккордов

-В модуле chord_types можно сократить половину кода, если переменную note2(третью ступень в аккорде) обрабатывать
отдельной функцией.

-Можно сделать конструктор аккордов, чтобы не создавать для каждого аккорда функцию, а создавать любой аккорд с нуля.
Запрашивать тоник, количество нот, расстояние в полутонах от тоники для каждой ноты.

-test_all долго считает
"""
